<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>UnderGraduate10F</name>
  <description />
  <extended_description />
  <job_version />
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2011/10/05 11:53:46.318</created_date>
  <modified_user>-</modified_user>
  <modified_date>2011/10/05 11:53:46.318</modified_date>
  <parameters />
  <connection>
    <name>OAAIDBtest_connect</name>
    <server>10.128.247.167</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>OAAIDBtest</database>
    <port>1433</port>
    <username>sandeep</username>
    <password>Encrypted 2be98afc86aa7f2e4b80eaf608fcbf788</password>
    <servername />
    <data_tablespace />
    <index_tablespace />
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1433</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers />
  <job-log-table>
    <connection />
    <schema />
    <table />
    <size_limit_lines />
    <interval />
    <timeout_days />
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection />
    <schema />
    <table />
    <timeout_days />
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection />
    <schema />
    <table />
    <timeout_days />
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file />
  <entries>
    <entry>
      <name>START</name>
      <description />
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>34</xloc>
      <yloc>44</yloc>
    </entry>
    <entry>
      <name>alt_bio</name>
      <description />
      <type>SQL</type>
      <sql>ALTER TABLE ${DISTBIO}
ADD APTITUDE_SCORE int;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>266</xloc>
      <yloc>196</yloc>
    </entry>
    <entry>
      <name>Apt_Score</name>
      <description />
      <type>SQL</type>
      <sql>UPDATE dbo.${DISTBIO}
   set  APTITUDE_SCORE=
   CASE 
      WHEN ACT_COMPOSITE_SCORE =36 THEN 1600
      WHEN ACT_COMPOSITE_SCORE=35 THEN 1560
      WHEN ACT_COMPOSITE_SCORE=34 THEN 1510
      WHEN ACT_COMPOSITE_SCORE=33 THEN 1460
      WHEN ACT_COMPOSITE_SCORE=32 THEN 1420
      WHEN ACT_COMPOSITE_SCORE=31 THEN 1380
      WHEN ACT_COMPOSITE_SCORE=30 THEN 1340
      WHEN ACT_COMPOSITE_SCORE=29 THEN 1300
      WHEN ACT_COMPOSITE_SCORE=28 THEN 1260
      WHEN ACT_COMPOSITE_SCORE=27 THEN 1220
      WHEN ACT_COMPOSITE_SCORE=26 THEN 1190
      WHEN ACT_COMPOSITE_SCORE=25 THEN 1150
      WHEN ACT_COMPOSITE_SCORE=24 THEN 1110
      WHEN ACT_COMPOSITE_SCORE=23 THEN 1070
      WHEN ACT_COMPOSITE_SCORE=22 THEN 1030
      WHEN ACT_COMPOSITE_SCORE=21 THEN 990
      WHEN ACT_COMPOSITE_SCORE=20 THEN 950
      WHEN ACT_COMPOSITE_SCORE=19 THEN 910
      WHEN ACT_COMPOSITE_SCORE=18 THEN 870 
      WHEN ACT_COMPOSITE_SCORE=17 THEN 830 
      WHEN ACT_COMPOSITE_SCORE=16 THEN 790
      WHEN ACT_COMPOSITE_SCORE=15 THEN 740 
      WHEN ACT_COMPOSITE_SCORE=14 THEN 690
      WHEN ACT_COMPOSITE_SCORE=13 THEN 640
      WHEN ACT_COMPOSITE_SCORE=12 THEN 590
      WHEN ACT_COMPOSITE_SCORE=11 THEN 530
      WHEN SAT_MATH_SCORE is not null
        and SAT_VERBAL_SCORE  is not null THEN SAT_VERBAL_SCORE + SAT_MATH_SCORE
      WHEN SAT_MATH_SCORE is not null
 and SAT_VERBAL_SCORE is not null
 and ACT_COMPOSITE_SCORE is not null THEN SAT_VERBAL_SCORE + SAT_MATH_SCORE

END
;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>380</xloc>
      <yloc>195</yloc>
    </entry>
    <entry>
      <name>drp_Cour</name>
      <description />
      <type>SQL</type>
      <sql>IF EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'${COURSE}') AND NAME='COURSE')
    ALTER TABLE ${COURSE} DROP COLUMN COURSE;
IF EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'${COURSE}') AND NAME='COURSENUM')
    ALTER TABLE ${COURSE} DROP COLUMN COURSENUM;
IF EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'${COURSE}') AND NAME='ONLINE_FLAG')
    ALTER TABLE ${COURSE} DROP COLUMN ONLINE_FLAG;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>392</xloc>
      <yloc>321</yloc>
    </entry>
    <entry>
      <name>up_cour</name>
      <description />
      <type>SQL</type>
      <sql>ALTER table ${COURSE} ALTER COLUMN SECTION VARCHAR(4);

UPDATE ${COURSE}
   SET COURSE = (SELECT SUBJECT+ '_'+ COURSENO +'_'+SECTION+'_10F')</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>609</xloc>
      <yloc>321</yloc>
    </entry>
    <entry>
      <name>up_ cnum</name>
      <description />
      <type>SQL</type>
      <sql>UPDATE ${COURSE}
   SET COURSENUM= (select SUBSTRING([COURSE],1,LEN([COURSE])-9));</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>540</xloc>
      <yloc>423</yloc>
    </entry>
    <entry>
      <name>up_ Oflag</name>
      <description />
      <type>SQL</type>
      <sql>UPDATE ${COURSE}
   SET  ONLINE_FLAG= 
         CASE WHEN  SUBSTRING(COURSE,LEN(COURSE)-6,1)='7' then 1
         WHEN SUBSTRING(COURSE,LEN(COURSE)-6,1)!='7' then 0
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>429</xloc>
      <yloc>427</yloc>
    </entry>
    <entry>
      <name>Alt_course</name>
      <description />
      <type>SQL</type>
      <sql>alter table  dbo.${COURSE}

add COURSE varchar(17),
    COURSENUM varchar(17),
    ONLINE_FLAG INT;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>506</xloc>
      <yloc>321</yloc>
    </entry>
    <entry>
      <name>drp AggScor</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vRandNumber]'))
    DROP VIEW [dbo].[vRandNumber]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RandNumber]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
    DROP FUNCTION [dbo].[RandNumber]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${FULLGRADES_STUDENTS}]') AND type in (N'U'))
    DROP TABLE [dbo].[${FULLGRADES_STUDENTS}]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_COUNT}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_COUNT}]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_NEW}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_NEW}]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AGG_GRDBK_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AGG_GRDBK_PARTIAL}]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AVGCOURSE_GRDBK_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AVGCOURSE_GRDBK_PARTIAL}]
    
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_PARTIAL}]
    
DROP TABLE ${AUX_AGGSCORES};
DROP TABLE ${AUX_AVGCOURSE_EFFTWTSCORE};    
DROP TABLE dbo.${PC};
DROP TABLE dbo.${NTNULLPC};
Drop TABLE dbo.${PCS};
Drop TABLE dbo.${NTNULLPCS};
DROP TABLE dbo.${mvCourseStudentEventQty};
DROP TABLE dbo.${mvCourseEventAvg};
DROP TABLE dbo.${mvCourseStudentEventRatio} ;
Drop TABLE dbo.${ASN_READ};
Drop TABLE dbo.${ASSMT_TAKE};
Drop TABLE dbo.${ASSMT_SUB};
Drop TABLE dbo.${ASN_SUB};
Drop TABLE dbo.${CONTENT_READ};
Drop TABLE dbo.${LESSONS_VIEW};
Drop TABLE dbo.${FORUM_POST};
Drop TABLE dbo.${FORUM_READ};
DROP TABLE dbo.${SESSIONS};</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>705</xloc>
      <yloc>1720</yloc>
    </entry>
    <entry>
      <name>PC</name>
      <description />
      <type>SQL</type>
      <sql>SELECT  P.ALTERNATIVE_ID,
C.COURSE,
C.COURSENUM,
C.SUBJECT,
C.ONLINE_FLAG,
C.SECTION,
C.ENROLLMENT,
C.LETTER_GRADE,
P.CLASS_RANK,
P.PERCENTILE,
P.SAT_VERBAL_SCORE,
P.SAT_MATH_SCORE,
P.ACT_COMPOSITE_SCORE,
P.APTITUDE_SCORE,
P.AGE,
P.GENDER,
P.FTPT,
P.CLASS,
P.CUM_GPA,
P.SEM_GPA,
P.ACADEMIC_STANDING

into dbo.${PC}
FROM dbo.${DISTBIO} P
INNER JOIN dbo.${DISTCOURSE} C

ON P.ALTERNATIVE_ID =C.ALTERNATIVE_ID
 ;


--ALTER TABLE [dbo].[${PC}] ADD  CONSTRAINT [PK_U10F_PC] PRIMARY KEY CLUSTERED 
--(
--  [ALTERNATIVE_ID] ASC,
----    [COURSE] ASC
--)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>525</xloc>
      <yloc>910</yloc>
    </entry>
    <entry>
      <name>Del_in_Grade</name>
      <description />
      <type>SQL</type>
      <sql>DELETE FROM dbo.${NTNULLPC}
WHERE LETTER_GRADE='W'
or LETTER_GRADE='WF'
or LETTER_GRADE= 'AU'
or LETTER_GRADE= 'P' 
or LETTER_GRADE= 'NC'
or LETTER_GRADE= 'X'
or LETTER_GRADE= 'I';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>906</xloc>
      <yloc>908</yloc>
    </entry>
    <entry>
      <name>Recodin</name>
      <description />
      <type>SQL</type>
      <sql>Update P
       Set P.GENDER = Replace (P.GENDER, 'F', '1')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.GENDER = Replace (P.GENDER, 'M', '2')
       From dbo.${NTNULLPC}  P ;

UPDATE dbo.${NTNULLPC}
   SET 
      GENDER = NULL
      WHERE GENDER='N';

Update P
       Set P.FTPT = Replace (P.FTPT, 'F', '1')
       From dbo.${NTNULLPC} P;
Update P
       Set P.FTPT = Replace (P.FTPT, 'P', '2')
       From dbo.${NTNULLPC}  P ;

UPDATE dbo.${NTNULLPC} 
   SET 
      FTPT = NULL
      WHERE FTPT='o';


Update P
       Set P.CLASS = Replace (P.CLASS, 'SO', '2')
       From dbo.${NTNULLPC}  P;
Update P
       Set P.CLASS = Replace (P.CLASS, 'JR', '3')
       From dbo.${NTNULLPC}  P;
Update P
       Set P.CLASS = Replace (P.CLASS, 'FR', '1')
       From dbo.${NTNULLPC}  P;
Update P
       Set P.CLASS = Replace (P.CLASS, 'SR', '4')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.CLASS = Replace (P.CLASS, 'GR', '5')
       From dbo.${NTNULLPC}   P;




Update P
       Set P.ONLINE_FLAG = Replace (P.ONLINE_FLAG, 'Y', '1')
       From dbo.${NTNULLPC} P;

Update P
      Set P.ONLINE_FLAG= Replace (P.ONLINE_FLAG, 'N', '2')
      From dbo.${NTNULLPC}  P;



UPDATE dbo.${NTNULLPC}
    SET LETTER_GRADE='3.7'
    WHERE LETTER_GRADE='A-';

UPDATE dbo.${NTNULLPC}
        SET LETTER_GRADE='2.7'
        WHERE LETTER_GRADE='B-';

UPDATE dbo.${NTNULLPC}
        SET LETTER_GRADE='1.7'
        WHERE LETTER_GRADE='C-';

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'A', '4.0')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'B+', '3.3')
       From dbo.${NTNULLPC} P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'B', '3.0')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'C+', '2.3')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'C', '2.0')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'D+', '1.3')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'D', '1.0')
       From dbo.${NTNULLPC}  P;

Update P
       Set P.LETTER_GRADE = Replace (P.LETTER_GRADE, 'F', '0.0')
       From dbo.${NTNULLPC}  P;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1085</xloc>
      <yloc>907</yloc>
    </entry>
    <entry>
      <name>change D type</name>
      <description />
      <type>SQL</type>
      <sql>Alter Table dbo.${NTNULLPC}
add RC_GENDER int,
 RC_FTPT int,
 RC_CLASS int,
 RC_LETTERGRADE float,
 ACADEMIC_RISK int ;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>980</xloc>
      <yloc>1061</yloc>
    </entry>
    <entry>
      <name>Up RC Col</name>
      <description />
      <type>SQL</type>
      <sql>update dbo.${NTNULLPC} set RC_GENDER= cast( GENDER as int);

Alter table dbo.${NTNULLPC}
drop column GENDER;

update dbo.${NTNULLPC} set RC_FTPT= cast( FTPT as int);

Alter table dbo.${NTNULLPC}
drop column FTPT;


update dbo.${NTNULLPC} set RC_CLASS= cast(CLASS as int);

Alter table dbo.${NTNULLPC}
drop column CLASS;


update dbo.${NTNULLPC} set RC_LETTERGRADE= cast( LETTER_GRADE as float);

Alter table dbo.${NTNULLPC}
drop column LETTER_GRADE;



Update dbo.${NTNULLPC} set ACADEMIC_RISK=
  Case when RC_LETTERGRADE &lt;2 then 1
  else 2 
 END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>774</xloc>
      <yloc>1065</yloc>
    </entry>
    <entry>
      <name>PCS</name>
      <description />
      <type>SQL</type>
      <sql>SELECT  P.*, C.RMN_SCORE, PR.RMN_SCORE_PARTIAL
INTO dbo.${PCS}
FROM dbo.${NTNULLPC}  P
INNER JOIN dbo.${GRADES_SCORES} C
    ON P.ALTERNATIVE_ID =C.ALTERNATIVE_ID
    AND P.COURSE=C.COURSE
INNER JOIN dbo.${GRADES_PARTIAL_RMN} PR
    ON P.ALTERNATIVE_ID =PR.ALTERNATIVE_ID
    AND P.COURSE=PR.COURSE;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>600</xloc>
      <yloc>1069</yloc>
    </entry>
    <entry>
      <name>MvQty</name>
      <description />
      <type>SQL</type>
      <sql>SELECT S.COURSE, RC_CLASS, P.ALTERNATIVE_ID, EVENT, COUNT(*) AS QTY
INTO ${mvCourseStudentEventQty}
FROM dbo.${SAKAIEVENTS} S, dbo.${NTNULLPC} P
WHERE S.ALTERNATIVE_ID=P.ALTERNATIVE_ID
GROUP BY S.COURSE,Rc_Class, P.ALTERNATIVE_ID,EVENT
ORDER BY S.COURSE,Rc_Class, P.ALTERNATIVE_ID,EVENT;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>300</xloc>
      <yloc>1304</yloc>
    </entry>
    <entry>
      <name>MvAvg</name>
      <description />
      <type>SQL</type>
      <sql>SELECT COURSE, EVENT, SUM(QTY) AS TQTY, AVG(QTY * 1.0) AS MEAN
into dbo.${mvCourseEventAvg}
FROM   dbo.${mvCourseStudentEventQty}
GROUP BY COURSE, EVENT;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>410</xloc>
      <yloc>1304</yloc>
    </entry>
    <entry>
      <name>MvRatio</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  v1.COURSE, v1.ALTERNATIVE_ID, v1.EVENT,
  v1.QTY, v2.MEAN, v1.QTY / v2.MEAN AS RATIO
into dbo.${mvCourseStudentEventRatio} 
FROM dbo.${mvCourseStudentEventQty} AS v1 
INNER JOIN dbo.${mvCourseEventAvg} AS v2 
ON v1.COURSE = v2.COURSE
AND v1.EVENT = v2.EVENT;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>511</xloc>
      <yloc>1307</yloc>
    </entry>
    <entry>
      <name>Assmt_sub</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_ASSMT_SUB,
  Ratio as R_ASSMT_SUB
INTO ${ASSMT_SUB}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT = 'sam.assessment.submit';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>733</xloc>
      <yloc>1313</yloc>
    </entry>
    <entry>
      <name>Asn_Read</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_ASN_READ,
  Ratio as R_ASN_READ
INTO ${ASN_READ}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT = 'asn.read.assignment';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>863</xloc>
      <yloc>1314</yloc>
    </entry>
    <entry>
      <name>Asn_sub</name>
      <description />
      <type>SQL</type>
      <sql>SELECT COURSE,ALTERNATIVE_ID,QTY as Q_ASN_SUB,Ratio as R_ASN_SUB
INTO ${ASN_SUB}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT = 'asn.submit.submission';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>995</xloc>
      <yloc>1311</yloc>
    </entry>
    <entry>
      <name>Con_read</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_CONTENT_READ,
  Ratio as R_CONTENT_READ
INTO ${CONTENT_READ}
FROM dbo.${mvCourseStudentEventRatio} 
WHERE EVENT = 'content.read';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>905</xloc>
      <yloc>1556</yloc>
    </entry>
    <entry>
      <name>Lessons</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_LESSONS_VIEW,
  Ratio as R_LESSONS_VIEW
INTO ${LESSONS_VIEW}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT = 'melete.section.read';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>756</xloc>
      <yloc>1561</yloc>
    </entry>
    <entry>
      <name>Forum_pst</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  sum(QTY) as Q_FORUM_POST,
  sum(QTY) / sum(Mean) as R_FORUM_POST
INTO ${FORUM_POST}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT in ('forums.new' , 'forums.newtopic' , 'forums.response')
GROUP BY COURSE, ALTERNATIVE_ID;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>626</xloc>
      <yloc>1566</yloc>
    </entry>
    <entry>
      <name>Forum_Read</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_FORUM_READ,
  Ratio as R_FORUM_READ
INTO ${FORUM_READ}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT ='forums.read';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>479</xloc>
      <yloc>1559</yloc>
    </entry>
    <entry>
      <name>PCM</name>
      <description />
      <type>SQL</type>
      <sql>SELECT C.ALTERNATIVE_ID, C.COURSE,C.COURSENUM,C.SUBJECT,C.ONLINE_FLAG,C.ENROLLMENT,

       C.RC_LETTERGRADE,C.CLASS_RANK,C.PERCENTILE,C.SAT_VERBAL_SCORE,C.SAT_MATH_SCORE,
       
       C.APTITUDE_SCORE,C.AGE,C.RC_GENDER,C.RC_FTPT,C.RC_CLASS,C.CUM_GPA,

       C.SEM_GPA,C.ACADEMIC_STANDING,C.RMN_SCORE,C.RMN_SCORE_PARTIAL,
       
       CT.R_CONTENT_READ,
       
       ASN.R_ASN_SUB,
       
       FP.R_FORUM_POST,
       
       FR.R_FORUM_READ,
       
       LS.R_LESSONS_VIEW,
      
       ASSMT.R_ASSMT_TAKE,
       
       ASMS.R_ASSMT_SUB,

       ASNR.R_ASN_READ,

       SES.R_SESSIONS,

       C.ACADEMIC_RISK

into ${PCSMa}

FROM dbo.${NTNULLPCS} C 
LEFT JOIN ${CONTENT_READ} CT
ON C.COURSE = CT.COURSE AND C.ALTERNATIVE_ID = CT.ALTERNATIVE_ID
LEFT JOIN ${SESSIONS} SES
ON C.COURSE = SES.COURSE AND C.ALTERNATIVE_ID = SES.ALTERNATIVE_ID
LEFT JOIN dbo.${ASN_SUB} ASN
ON C.COURSE = ASN.COURSE AND C.ALTERNATIVE_ID = ASN.ALTERNATIVE_ID
LEFT JOIN ${FORUM_POST} FP
ON C.COURSE = FP.COURSE AND C.ALTERNATIVE_ID = FP.ALTERNATIVE_ID
LEFT JOIN ${FORUM_READ} FR
ON C.COURSE = FR.COURSE AND C.ALTERNATIVE_ID = FR.ALTERNATIVE_ID
LEFT JOIN ${LESSONS_VIEW} LS
ON C.COURSE = LS.COURSE AND C.ALTERNATIVE_ID = LS.ALTERNATIVE_ID
LEFT JOIN  dbo.${ASSMT_TAKE} ASSMT
ON C.COURSE = ASSMT.COURSE AND C.ALTERNATIVE_ID = ASSMT.ALTERNATIVE_ID
LEFT JOIN  dbo.${ASSMT_SUB} ASMS
ON C.COURSE = ASMS.COURSE AND C.ALTERNATIVE_ID = ASMS.ALTERNATIVE_ID
LEFT JOIN  dbo.${ASN_READ} ASNR
ON C.COURSE = ASNR.COURSE AND C.ALTERNATIVE_ID = ASNR.ALTERNATIVE_ID;



UPDATE ${PCSMa} SET CUM_GPA = NULL WHERE CUM_GPA=0 AND RC_CLASS=1;

drop table OAAIDBEitel.dbo.${PCSMa};

select * into OAAIDBEitel.dbo.${PCSMa} from OAAIDBtest.dbo.${PCSMa};</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>345</xloc>
      <yloc>1716</yloc>
    </entry>
    <entry>
      <name>Assmt_tk</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_ASSMT_TAKE,
  Ratio as R_ASSMT_TAKE
INTO ${ASSMT_TAKE}
FROM dbo.${mvCourseStudentEventRatio} 
WHERE EVENT = 'sam.assessment.take';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>1312</yloc>
    </entry>
    <entry>
      <name>Drop PCM</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${PCSMa}]') AND type in (N'U'))
    DROP TABLE [dbo].[${PCSMa}]</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>175</xloc>
      <yloc>1721</yloc>
    </entry>
    <entry>
      <name>NtnullPC</name>
      <description />
      <type>SQL</type>
      <sql>SELECT * into ${NTNULLPC}
from ${PC}
WHERE [ALTERNATIVE_ID] is NOT NULL
AND   [COURSE] is NOT NULL
AND   [LETTER_GRADE]is NOT NULL
AND   [GENDER]  is NOT NULL
AND   [FTPT]is NOT NULL
AND   [CLASS]is NOT NULL
AND   [CUM_GPA]  is NOT NULL
AND   [SEM_GPA]is NOT NULL
AND   [ACADEMIC_STANDING]is NOT NULL
;




--ALTER TABLE [dbo].[${NTNULLPC}] ADD  CONSTRAINT [PK_NtNullPC] PRIMARY KEY CLUSTERED 
--(
--  [ALTERNATIVE_ID] ASC,
--  [COURSE] ASC
--)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
--;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>721</xloc>
      <yloc>904</yloc>
    </entry>
    <entry>
      <name>NtnullPCS</name>
      <description />
      <type>SQL</type>
      <sql>Select * into dbo.${NTNULLPCS}
from dbo.${PCS}
where RMN_SCORE_PARTIAL IS NOT NULL AND
RMN_SCORE IS NOT NULL;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>465</xloc>
      <yloc>1065</yloc>
    </entry>
    <entry>
      <name>GradBio_PK</name>
      <description />
      <type>SQL</type>
      <sql>ALTER TABLE ${BIO}
   ALTER  COLUMN ALTERNATIVE_ID varchar(36) NOT NULL ;


drop table ${DISTBIO};

SELECT *
into ${DISTBIO}
FROM   (SELECT *,Row_number() OVER(PARTITION BY ALTERNATIVE_ID ORDER BY ALTERNATIVE_ID) rn
        FROM  ${BIO}) t
WHERE  rn = 1 ;



Alter Table ${DISTBIO} Drop column rn;

ALTER TABLE ${DISTBIO} ADD  CONSTRAINT [PK_U10FDistBio] PRIMARY KEY CLUSTERED 
(
    [ALTERNATIVE_ID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>161</xloc>
      <yloc>196</yloc>
    </entry>
    <entry>
      <name>Pk_GradCourse</name>
      <description />
      <type>SQL</type>
      <sql>drop table dbo.${DISTCOURSE};

SELECT *
 into dbo.${DISTCOURSE}
 FROM   (SELECT *,Row_number() OVER(PARTITION BY ALTERNATIVE_ID,COURSE ORDER BY COURSE) rn
        FROM  ${COURSE}) t
 WHERE  rn = 1 ;

Alter Table dbo.${DISTCOURSE} Drop column rn;

DELETE FROM ${DISTCOURSE} WHERE COURSE IS NULL;

ALTER TABLE [OAAIDBtest].[dbo].[${DISTCOURSE}]
   ALTER  COLUMN [ALTERNATIVE_ID]  varchar(36) NOT NULL;

ALTER TABLE [OAAIDBtest].[dbo].[${DISTCOURSE}]
   ALTER  COLUMN [COURSE]  varchar(17) NOT NULL;

ALTER TABLE [dbo].[${DISTCOURSE}] ADD  CONSTRAINT [PK_U10FDistCourse] PRIMARY KEY CLUSTERED 
(
    [ALTERNATIVE_ID] ASC,
    [COURSE] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>276</xloc>
      <yloc>430</yloc>
    </entry>
    <entry>
      <name>Dist PCM</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${NTNULLPCSMa}]') AND type in (N'U'))
    DROP TABLE [dbo].[${NTNULLPCSMa}]

SELECT *
into ${NTNULLPCSMa}
from dbo.${PCSMa} C
WHERE C.R_CONTENT_READ is not null 
and C.R_ASN_SUB is not null;


drop table OAAIDBEitel.dbo.${NTNULLPCSMa};

select * into OAAIDBEitel.dbo.${NTNULLPCSMa} from OAAIDBtest.dbo.${NTNULLPCSMa};</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>517</xloc>
      <yloc>1719</yloc>
    </entry>
    <entry>
      <name>Bio</name>
      <description />
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id />
      <filename>${Internal.Job.Filename.Directory}/UnGradBio10F_Conv.ktr</filename>
      <transname />
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile />
      <logext />
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name />
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>64</xloc>
      <yloc>199</yloc>
    </entry>
    <entry>
      <name>Course</name>
      <description />
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id />
      <filename>${Internal.Job.Filename.Directory}/UnGradCourse10F_conv.ktr</filename>
      <transname />
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile />
      <logext />
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name />
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>276</xloc>
      <yloc>320</yloc>
    </entry>
    <entry>
      <name>AssignWeights_Grades</name>
      <description />
      <type>JOB</type>
      <specification_method>filename</specification_method>
      <job_object_id />
      <filename>${Internal.Job.Filename.Directory}/AssignWeights_Grades10F.kjb</filename>
      <jobname />
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile />
      <logext />
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name />
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>171</xloc>
      <yloc>556</yloc>
    </entry>
    <entry>
      <name>Sessions</name>
      <description />
      <type>SQL</type>
      <sql>SELECT 
  COURSE,
  ALTERNATIVE_ID,
  QTY as Q_SESSIONS,
  Ratio as R_SESSIONS
INTO ${SESSIONS}
FROM dbo.${mvCourseStudentEventRatio}
WHERE EVENT = 'pres.begin';</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>293</xloc>
      <yloc>1563</yloc>
    </entry>
    <entry>
      <name>Gen_Random#</name>
      <description />
      <type>SQL</type>
      <sql>CREATE VIEW vRandNumber
AS
SELECT (33 + CONVERT(INT, (66-33+1)*RAND())) as RandNumber;


CREATE FUNCTION RandNumber()
RETURNS INT
AS
  BEGIN
  RETURN (SELECT RandNumber FROM vRandNumber)
  END</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>510</xloc>
      <yloc>647</yloc>
    </entry>
    <entry>
      <name>Grades10F_Count</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Grades10F_Count]') AND type in (N'U'))
    DROP TABLE ${GRADES_COUNT}
    
SELECT NEW.COURSE COURSE,max(NEW.total) Total,dbo.RandNumber() RandomNumber INTO ${GRADES_COUNT}
FROM
(SELECT COURSE,COUNT(*) total FROM ${GRADES} GROUP BY COURSE,ALTERNATIVE_ID) NEW
GROUP BY new.COURSE ORDER BY new.COURSE

ALTER TABLE ${GRADES_COUNT} ADD NoOfGradeObj INT

UPDATE ${GRADES_COUNT} SET NoOfGradeObj = CEILING ((1.0*RandomNumber/100)*Total)</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>622</xloc>
      <yloc>647</yloc>
    </entry>
    <entry>
      <name>One_Stdt/course</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${FULLGRADES_STUDENTS}]') AND type in (N'U'))
    DROP TABLE [dbo].[${FULLGRADES_STUDENTS}]
        
SELECT COURSE,ALTERNATIVE_ID INTO ${FULLGRADES_STUDENTS} FROM (
SELECT NEW.COURSE,NEW.ALTERNATIVE_ID,ROW_NUMBER() OVER(PARTITION BY NEW.COURSE order by NEW.COURSE) rn FROM 
(SELECT COURSE,ALTERNATIVE_ID,COUNT(*) total from ${GRADES} group by COURSE,ALTERNATIVE_ID) NEW,
${GRADES_COUNT} c WHERE NEW.COURSE=c.COURSE AND NEW.total = c.Total) Table1 
WHERE Table1.rn = 1 order by COURSE</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>746</xloc>
      <yloc>649</yloc>
    </entry>
    <entry>
      <name>OneStdt_GradObjs</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_NEW}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_NEW}];

WITH TEMP AS
(
SELECT 
        G.*,ROW_NUMBER() OVER(PARTITION BY G.COURSE,G.ALTERNATIVE_ID ORDER BY NEWID()) RN
FROM 
        ${GRADES} G,${FULLGRADES_STUDENTS} F
WHERE 
        G.COURSE = F.COURSE AND G.ALTERNATIVE_ID = F.ALTERNATIVE_ID
)
SELECT 
        TEMP.*,G.NoOfGradeObj NoOfGradeObj
        INTO 
            ${GRADES_NEW}
FROM 
        TEMP,${GRADES_COUNT} G
WHERE 
        TEMP.COURSE = G.COURSE 
            AND
        TEMP.RN&lt;=G.NoOfGradeObj
ORDER BY
        TEMP.COURSE
;

ALTER TABLE ${GRADES_NEW} DROP COLUMN RN</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>863</xloc>
      <yloc>653</yloc>
    </entry>
    <entry>
      <name>Grad10F_Partial</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_PARTIAL}];

SELECT * INTO ${GRADES_PARTIAL} FROM ${GRADES_NEW};</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>990</xloc>
      <yloc>653</yloc>
    </entry>
    <entry>
      <name>Ins_PartialGrads</name>
      <description />
      <type>SQL</type>
      <sql>INSERT INTO 
            ${GRADES_PARTIAL} 
        SELECT 
            G.*,F.NoOfGradeObj 
        FROM 
            ${GRADES} G,
            ${GRADES_NEW} F
        WHERE 
            F.COURSE = G.COURSE
            AND
            F.ALTERNATIVE_ID&lt;&gt;G.ALTERNATIVE_ID
            AND
            F.GRADABLE_OBJECT = G.GRADABLE_OBJECT 
        ORDER BY 
            G.COURSE,G.ALTERNATIVE_ID,F.GRADABLE_OBJECT</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1113</xloc>
      <yloc>654</yloc>
    </entry>
    <entry>
      <name>InsGradObj_0Score</name>
      <description />
      <type>SQL</type>
      <sql>INSERT INTO 
            ${GRADES_PARTIAL}
        SELECT DISTINCT 
            G.COURSE,G.ALTERNATIVE_ID,F.WEIGHT,F.CATEGORY,F.GRADABLE_OBJECT,
            F.MAX_POINTS,0 EARNED_POINTS,0 SCORE,F.NoOfGradeObj
        FROM 
            ${GRADES} G,
            ${GRADES_NEW} F
        WHERE 
            F.COURSE = G.COURSE
            AND
            F.ALTERNATIVE_ID &lt;&gt; G.ALTERNATIVE_ID
            AND
            F.GRADABLE_OBJECT NOT IN 
            (SELECT GRADABLE_OBJECT FROM Grades10Fa WHERE COURSE=G.COURSE AND ALTERNATIVE_ID=G.ALTERNATIVE_ID)
        ORDER BY 
            G.COURSE,G.ALTERNATIVE_ID,F.GRADABLE_OBJECT</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1082</xloc>
      <yloc>772</yloc>
    </entry>
    <entry>
      <name>Drop_Score</name>
      <description />
      <type>SQL</type>
      <sql>IF EXISTS(SELECT * FROM sys.columns WHERE OBJECT_ID=Object_ID(N'[dbo].[${GRADES}]') AND name=N'SCORE')
     ALTER TABLE dbo.${GRADES} drop column SCORE</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>326</xloc>
      <yloc>557</yloc>
    </entry>
    <entry>
      <name>Add_Score</name>
      <description />
      <type>SQL</type>
      <sql>alter table  dbo.${GRADES}
add SCORE float(7);


UPDATE dbo.${GRADES}
SET SCORE= EARNED_POINTS/MAX_POINTS ;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>443</xloc>
      <yloc>554</yloc>
    </entry>
    <entry>
      <name>EffWt_Score</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AGG_GRDBK_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AGG_GRDBK_PARTIAL}]

SELECT COURSE
      ,ALTERNATIVE_ID
      ,SUM(WEIGHT) as TOTAL_WEIGHT
      ,SUM(SCORE * WEIGHT)  as WEIGHTED_SCORE 
      ,CASE
         WHEN SUM(WEIGHT)&lt;&gt;0 then SUM(SCORE * WEIGHT) /SUM(WEIGHT)
         else  0
       end  as EFFWT_SCORE
into ${AGG_GRDBK_PARTIAL}
FROM ${GRADES_PARTIAL}
GROUP BY COURSE,ALTERNATIVE_ID
ORDER BY COURSE,ALTERNATIVE_ID


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AUX_AGGSCORES}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AUX_AGGSCORES}]
SELECT COURSE
      ,ALTERNATIVE_ID
      ,SUM(WEIGHT) as TOTAL_WEIGHT
      ,SUM(SCORE * WEIGHT)  as WEIGHTED_SCORE 
      ,CASE
         WHEN SUM(WEIGHT)&lt;&gt;0 then SUM(SCORE * WEIGHT) /SUM(WEIGHT)
         else  0
       end  as EFFWT_SCORE
into ${AUX_AGGSCORES}
FROM dbo.${GRADES}
GROUP BY COURSE,ALTERNATIVE_ID
ORDER BY COURSE,ALTERNATIVE_ID</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>962</xloc>
      <yloc>771</yloc>
    </entry>
    <entry>
      <name>AVG_Score</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AVGCOURSE_GRDBK_PARTIAL}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AVGCOURSE_GRDBK_PARTIAL}]

SELECT COURSE
      ,AVG(EFFWT_SCORE) AVG_EFFWT_SCORE
INTO ${AVGCOURSE_GRDBK_PARTIAL}
FROM ${AGG_GRDBK_PARTIAL}
GROUP BY COURSE
ORDER BY COURSE


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${AUX_AVGCOURSE_EFFTWTSCORE}]') AND type in (N'U'))
    DROP TABLE [dbo].[${AUX_AVGCOURSE_EFFTWTSCORE}]
SELECT COURSE
      ,AVG(EFFWT_SCORE) AVG_EFFWT_SCORE
INTO ${AUX_AVGCOURSE_EFFTWTSCORE}
FROM ${AUX_AGGSCORES}
GROUP BY COURSE
ORDER BY COURSE</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>801</xloc>
      <yloc>771</yloc>
    </entry>
    <entry>
      <name>RMN_SCORE</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_PARTIAL_RMN}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_PARTIAL_RMN}]

SELECT A.*, 
       AVG_EFFWT_SCORE, 
       CASE 
         WHEN AVG_EFFWT_SCORE = 0 THEN 100
         ELSE EFFWT_SCORE/AVG_EFFWT_SCORE*100 
       END AS RMN_SCORE_PARTIAL  
INTO ${GRADES_PARTIAL_RMN}       
FROM ${AGG_GRDBK_PARTIAL} A, ${AVGCOURSE_GRDBK_PARTIAL} M
WHERE A.COURSE= M.COURSE
      AND
      AVG_EFFWT_SCORE &gt; 0
ORDER BY COURSE;



IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[${GRADES_SCORES}]') AND type in (N'U'))
    DROP TABLE [dbo].[${GRADES_SCORES}]
SELECT A.*,
       AVG_EFFWT_SCORE,
       CASE
         WHEN AVG_EFFWT_SCORE = 0 THEN 100
         ELSE EFFWT_SCORE/AVG_EFFWT_SCORE*100 
       END AS RMN_SCORE  
INTO ${GRADES_SCORES}
FROM ${AUX_AGGSCORES} A, ${AUX_AVGCOURSE_EFFTWTSCORE} M
WHERE A.COURSE= M.COURSE
AND AVG_EFFWT_SCORE &gt; 0
ORDER BY COURSE;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>F</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>650</xloc>
      <yloc>769</yloc>
    </entry>
    <entry>
      <name>Drop_view</name>
      <description />
      <type>SQL</type>
      <sql>IF  EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[vRandNumber]'))
    DROP VIEW [dbo].[vRandNumber]

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RandNumber]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
    DROP FUNCTION [dbo].[RandNumber]</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename />
      <sendOneStatement>T</sendOneStatement>
      <connection>OAAIDBtest_connect</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>608</xloc>
      <yloc>553</yloc>
    </entry>
    <entry>
      <name>Set Environment variables</name>
      <description />
      <type>SET_VARIABLES</type>
      <replacevars>Y</replacevars>
      <filename />
      <file_variable_type>CURRENT_JOB</file_variable_type>
      <fields>
        <field>
          <variable_name>ASN_READ</variable_name>
          <variable_value>U10FASN_READ</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>ASN_SUB</variable_name>
          <variable_value>U10FASN_SUB</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>ASSMT_SUB</variable_name>
          <variable_value>U10FASSMT_SUB</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>ASSMT_TAKE</variable_name>
          <variable_value>U10FASSMT_TAKE</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>AUX_AGGSCORES</variable_name>
          <variable_value>Aux_AggScores_10F</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>AUX_AVGCOURSE_EFFTWTSCORE</variable_name>
          <variable_value>Aux_AVGCourse_effwtscore_10F</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>AVGCOURSE_GRDBK_PARTIAL</variable_name>
          <variable_value>AVGCourse_GRDBK10F_PARTIAL</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>BIO</variable_name>
          <variable_value>U10FBio_Recent</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>CONTENT_READ</variable_name>
          <variable_value>U10FCONTENT_READ</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>COURSE</variable_name>
          <variable_value>U10FCourse_Recent</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>DISTBIO</variable_name>
          <variable_value>U10FDistBio_Recent</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>DISTCOURSE</variable_name>
          <variable_value>U10FDistCourse_Recent</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>FORUM_POST</variable_name>
          <variable_value>U10FFORUM_POST</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>FORUM_READ</variable_name>
          <variable_value>U10FFORUM_READ</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>FULLGRADES_STUDENTS</variable_name>
          <variable_value>FullGrades_Students10F</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES</variable_name>
          <variable_value>Grades10Fa</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_ALL</variable_name>
          <variable_value>Grades10F_All</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_CALCULATEDWEIGHTS</variable_name>
          <variable_value>Grades_Fall2010_CalculatedWeights</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_COUNT</variable_name>
          <variable_value>Grades10F_Count</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_CW</variable_name>
          <variable_value>Grades_Fall2010_CW</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_DISTALL</variable_name>
          <variable_value>Grades10F_DistAll</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_NEW</variable_name>
          <variable_value>Grades10F_NEW</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_NTNULL</variable_name>
          <variable_value>Grades_Fall2010_NotNULL</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_PARTIAL</variable_name>
          <variable_value>GRADES10F_PARTIAL</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_PARTIAL_RMN</variable_name>
          <variable_value>Grades10F_PARTIAL_RMN</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>GRADES_SCORES</variable_name>
          <variable_value>Grades10F_Scores</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>LESSONS_VIEW</variable_name>
          <variable_value>U10FLESSONS_VIEW</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>NTNULLPC</variable_name>
          <variable_value>U10FNtnullPC</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>NTNULLPCS</variable_name>
          <variable_value>U10FntNullPCS</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>NTNULLPCSMa</variable_name>
          <variable_value>U10FntnullPCSM_pa</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>PC</variable_name>
          <variable_value>U10FPC</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>PCS</variable_name>
          <variable_value>U10FPCS</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>PCSMa</variable_name>
          <variable_value>U10FPCSM_pa</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>SAKAIEVENTS</variable_name>
          <variable_value>SAKAIEVENTS10F_Complete</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>SESSIONS</variable_name>
          <variable_value>U10FSESSIONS</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>mvCourseEventAvg</variable_name>
          <variable_value>U10FmvCourseEventAvg</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>mvCourseStudentEventQty</variable_name>
          <variable_value>U10FmvCourseStudentEventQty</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
        <field>
          <variable_name>mvCourseStudentEventRatio</variable_name>
          <variable_value>U10FmvCourseStudentEventRatio</variable_value>
          <variable_type>CURRENT_JOB</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>173</xloc>
      <yloc>48</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>alt_bio</from>
      <to>Apt_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>drp_Cour</from>
      <to>Alt_course</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Alt_course</from>
      <to>up_cour</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>up_cour</from>
      <to>up_ cnum</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>up_ cnum</from>
      <to>up_ Oflag</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Del_in_Grade</from>
      <to>Recodin</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Recodin</from>
      <to>change D type</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>change D type</from>
      <to>Up RC Col</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>MvQty</from>
      <to>MvAvg</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>MvAvg</from>
      <to>MvRatio</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Assmt_sub</from>
      <to>Asn_Read</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Asn_Read</from>
      <to>Asn_sub</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Asn_sub</from>
      <to>Con_read</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Con_read</from>
      <to>Lessons</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Lessons</from>
      <to>Forum_pst</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Forum_pst</from>
      <to>Forum_Read</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>MvRatio</from>
      <to>Assmt_tk</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Assmt_tk</from>
      <to>Assmt_sub</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Drop PCM</from>
      <to>PCM</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>NtnullPC</from>
      <to>Del_in_Grade</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>PCS</from>
      <to>NtnullPCS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>NtnullPCS</from>
      <to>MvQty</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>up_ Oflag</from>
      <to>Pk_GradCourse</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>PCM</from>
      <to>Dist PCM</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>GradBio_PK</from>
      <to>alt_bio</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>PC</from>
      <to>NtnullPC</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Up RC Col</from>
      <to>PCS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Dist PCM</from>
      <to>drp AggScor</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Bio</from>
      <to>GradBio_PK</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Apt_Score</from>
      <to>Course</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Course</from>
      <to>drp_Cour</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Pk_GradCourse</from>
      <to>AssignWeights_Grades</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Sessions</from>
      <to>Drop PCM</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Forum_Read</from>
      <to>Sessions</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Gen_Random#</from>
      <to>Grades10F_Count</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Grades10F_Count</from>
      <to>One_Stdt/course</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>One_Stdt/course</from>
      <to>OneStdt_GradObjs</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>OneStdt_GradObjs</from>
      <to>Grad10F_Partial</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Grad10F_Partial</from>
      <to>Ins_PartialGrads</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Ins_PartialGrads</from>
      <to>InsGradObj_0Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>InsGradObj_0Score</from>
      <to>EffWt_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>EffWt_Score</from>
      <to>AVG_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>AVG_Score</from>
      <to>RMN_SCORE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>AssignWeights_Grades</from>
      <to>Drop_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Drop_Score</from>
      <to>Add_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Add_Score</from>
      <to>Drop_view</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Drop_view</from>
      <to>Gen_Random#</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>RMN_SCORE</from>
      <to>PC</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Set Environment variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Set Environment variables</from>
      <to>Bio</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Pk_GradCourse</from>
      <to>Drop_Score</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
    <notepad>
      <note>ETL process involving the Demographic Data</note>
      <xloc>13</xloc>
      <yloc>263</yloc>
      <width>271</width>
      <heigth>25</heigth>
      <fontname />
      <fontsize>-1</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>ETL process involving the Course and Student Enrollments</note>
      <xloc>191</xloc>
      <yloc>380</yloc>
      <width>350</width>
      <heigth>25</heigth>
      <fontname />
      <fontsize>-1</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>ETL involving processing of Gradebook data

3 stage process

1) Clean the gradebook data through a series of transformation
    and calculate scores for each of the gradebook entries.

2) Randomizing and Selecting of the 30%  or 60% of the gradable 
   objects which can be considered as analogus to generation of 
    AARs 4 weeks or 8 weeks into the course. The normalization of 
    these scores accross the enrollment of the courses results in 
    generation of a powerful predictive metric called PARTIAL_RMN_SCORE.

3) Calculation of scores considering all the gradable objects in the course.
    This results in yet another powerful metric called the RMN_SCORE.</note>
      <xloc>9</xloc>
      <yloc>634</yloc>
      <width>458</width>
      <heigth>279</heigth>
      <fontname>Arial</fontname>
      <fontsize>10</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Merging the Demographics (P) table with Course (C) 
and later the resultant (PC) table with the Gradebook Scores table.

Recoding and update related metrics like GENDER, LETTER_GRADE,
FULL?PART TIME STATUS , CLASS, ACADEMIC_RISK etc.</note>
      <xloc>534</xloc>
      <yloc>966</yloc>
      <width>426</width>
      <heigth>85</heigth>
      <fontname>Arial</fontname>
      <fontsize>10</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Set the environmental variables used in the flow , with appropriate 
table names based on the dataset considered for the ETL process.

This technique enhances resuability and thereby helps in automation 
of the process.</note>
      <xloc>486</xloc>
      <yloc>9</yloc>
      <width>416</width>
      <heigth>85</heigth>
      <fontname>Arial</fontname>
      <fontsize>10</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Sakai Events ETL process</note>
      <xloc>552</xloc>
      <yloc>1234</yloc>
      <width>245</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Depicts the student performance using the level of participation of the students 
in the course through the various Sakai Events available.

THe following metrics are used for predictions

SESSIONS OPENED,
 CONTENT_READ,
 ASSESSMENT_TAKE / SUBMIT ,
 ASSIGNMENT READ/SUMIT , 
LESSONS_VIEW
FORUM  READ / POST.</note>
      <xloc>368</xloc>
      <yloc>1371</yloc>
      <width>472</width>
      <heigth>174</heigth>
      <fontname />
      <fontsize>-1</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Merge all the four transformed files ( Demographic , Course, Gradebook, Sakai ) into a single table which 
will be used in training of the predictive model.</note>
      <xloc>304</xloc>
      <yloc>1791</yloc>
      <width>624</width>
      <heigth>40</heigth>
      <fontname />
      <fontsize>-1</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Merge Phase I</note>
      <xloc>696</xloc>
      <yloc>850</yloc>
      <width>139</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Merge Phase II</note>
      <xloc>565</xloc>
      <yloc>1660</yloc>
      <width>145</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Demographics ETL process</note>
      <xloc>280</xloc>
      <yloc>147</yloc>
      <width>257</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Parametrized approach.</note>
      <xloc>245</xloc>
      <yloc>9</yloc>
      <width>226</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Course ETL process</note>
      <xloc>446</xloc>
      <yloc>271</yloc>
      <width>191</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>GradeBook ETL process</note>
      <xloc>539</xloc>
      <yloc>499</yloc>
      <width>227</width>
      <heigth>33</heigth>
      <fontname>Arial Black</fontname>
      <fontsize>12</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>Y</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
</job>
